data = '''
0x00 LL_CONNECTION_UPDATE_IND
0x01 LL_CHANNEL_MAP_IND
0x02 LL_TERMINATE_IND
0x03 LL_ENC_REQ
0x04 LL_ENC_RSP
0x05 LL_START_ENC_REQ
0x06 LL_START_ENC_RSP
0x07 LL_UNKNOWN_RSP
0x08 LL_FEATURE_REQ
0x09 LL_FEATURE_RSP
0x0A LL_PAUSE_ENC_REQ
0x0B LL_PAUSE_ENC_RSP
0x0C LL_VERSION_IND
0x0D LL_REJECT_IND
0x0E LL_PERIPHERAL_FEATURE_REQ
0x0F LL_CONNECTION_PARAM_REQ
0x10 LL_CONNECTION_PARAM_RSP
0x11 LL_REJECT_EXT_IND
0x12 LL_PING_REQ
0x13 LL_PING_RSP
0x14 LL_LENGTH_REQ
0x15 LL_LENGTH_RSP
0x16 LL_PHY_REQ
0x17 LL_PHY_RSP
0x18 LL_PHY_UPDATE_IND
0x19 LL_MIN_USED_CHANNELS_IND
0x1A LL_CTE_REQ
0x1B LL_CTE_RSP
0x1C LL_PERIODIC_SYNC_IND
0x1D LL_CLOCK_ACCURACY_REQ
0x1E LL_CLOCK_ACCURACY_RSP
0x1F LL_CIS_REQ
0x20 LL_CIS_RSP
0x21 LL_CIS_IND
0x22 LL_CIS_TERMINATE_IND
0x23 LL_POWER_CONTROL_REQ
0x24 LL_POWER_CONTROL_RSP
0x25 LL_POWER_CHANGE_IND
0x26 LL_SUBRATE_REQ
0x27 LL_SUBRATE_IND
0x28 LL_CHANNEL_REPORTING_IND
0x29 LL_CHANNEL_STATUS_IND
0x2A LL_PERIODIC_SYNC_WR_IND
'''

d = []
c = ''

for line in data.strip().split('\n') :
    tokens = line.split()
    opcode = int(tokens[0][2:],16)
    name = tokens[1]
    d.append('  0x%02x: %s'%(opcode,name))
    c += '''
class %s :
  def __init__(self, data) :
    raise RuntimeError('%%s not implemented'%%(type(self).__name__))

'''%(name)

print(c)
print('LL_Control_PDUs = {') 
print(',\n'.join(d))
print('}')
